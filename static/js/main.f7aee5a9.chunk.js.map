{"version":3,"sources":["pages/movies/modules/reducer.js","globals/index.js","pages/movies/modules/constants.js","pages/movies/modules/actions.js","components/atoms/SmallHeader.js","components/molecules/HeaderCell.js","pages/movies/containers/MoviesTableHeader.js","components/molecules/DataCell.js","components/molecules/DataCellBarChart.js","components/organisms/TableRow.js","pages/movies/containers/MovieTableRow.js","pages/movies/containers/MoviesTable.js","pages/movies/containers/SearchBar.js","components/organisms/DetailPane.js","components/atoms/Overview.js","components/atoms/Icon.js","pages/movies/containers/MovieDetailPane.js","components/atoms/LargeHeader.js","components/templates/MoviePageLayout.js","pages/movies/MoviesPage.js","App.js","index.js"],"names":["sortMovies","moviesData","sortField","sortOrder","sort","a","b","aVal","bVal","Date","valueOf","toUpperCase","articles","split","splice","join","initialState","moviesNowPlaying","moviesPopular","moviesTopRated","currentMovieList","isLoadingMovies","isLoadingMoreMovies","tmdbPageNum","movieDetail","isLoadingMovieDetail","createStore","state","action","type","movieData","console","error","err","movies","searchQuery","toLowerCase","filteredMovies","filter","movie","title","includes","updatedData","composeWithDevTools","applyMiddleware","thunk","fetchMoviesFailed","fetchMovies","url","fetch","then","res","json","SmallHeader","text","className","HeaderCell","sortIcon","content","src","sortBy","toggleSortOrder","snakeCaseHeading","replace","onClick","connect","dispatch","map","heading","ind","key","DataCell","DataCellBarChart","style","width","TableRow","children","onComponentClick","fetchMovieDetail","movieId","process","data","catch","id","release_date","popularity","vote_average","toString","slice","fetchNowPlaying","results","fetchMoreMovies","getState","nextPage","tbodyMarkup","React","useEffect","MovieTableRow","MoviesTableHeader","searchMovies","query","showAllMovies","useState","setSearchQuery","onChange","e","target","value","placeholder","DetailPane","isSelected","closePane","Overview","Icon","alt","addCommas","arrData","length","convertToDollarNotation","num","dollars","hundreds","Math","floor","closeDetailPane","min","homepage","overview","poster_path","tagline","genres","runtime","status","original_language","budget","revenue","production_companies","language","isolang","name","href","LargeHeader","MoviePageLayout","MoviesTable","App","store","MoviesPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7aee5a9.chunk.js","sourcesContent":["import { \n  FETCH_MOVIES_STARTED,\n  FETCH_MOVIES_FAILED,\n  FETCH_NOW_PLAYING_SUCCEEDED,\n  SORT_BY,\n  TOGGLE_SORT_ORDER,\n  SEARCH_MOVIES,\n  SHOW_ALL_MOVIES,\n  FETCH_MORE_MOVIES_STARTED,\n  FETCH_MORE_MOVIES_SUCCEEDED,\n  CLOSE_DETAIL_PANE,\n  FETCH_MOVIE_DETAIL_STARTED,\n  FETCH_MOVIE_DETAIL_SUCCEEDED\n} from './constants';\n\nfunction sortMovies (moviesData, sortField, sortOrder) {\n  const copyMoviesData = [...moviesData]\n  return copyMoviesData.sort((a, b) => {\n    let aVal = a[sortField];\n    let bVal = b[sortField];\n    if (sortField === 'release_date') {\n      aVal = new Date(aVal)\n      bVal = new Date(bVal)\n      if (sortOrder) return aVal.valueOf() - bVal.valueOf()\n      return bVal.valueOf() - aVal.valueOf()\n    }\n    else if (sortField === 'title') {\n      aVal = aVal.toUpperCase();\n      bVal = bVal.toUpperCase();\n      // remove 'the', 'a', 'an'\n      const articles = {\n        'THE': true,\n        'AN': true,\n        'A': true\n      }\n      if (articles[aVal.split(' ')[0]]) aVal = aVal.split(' ').splice(1).join('')\n      if (articles[bVal.split(' ')[0]]) bVal = bVal.split(' ').splice(1).join('')\n\n      if (sortOrder) {\n        if (aVal < bVal) return -1;\n        if (aVal > bVal) return 1;\n      }\n      else {\n        if (aVal < bVal) return 1;\n        if (aVal > bVal) return -1;\n      }\n      // if equal\n      return 0;\n    }\n    else {\n      if (sortOrder) return a[sortField] - b[sortField];\n      return b[sortField] - a[sortField];\n    }\n  })\n}\n\nexport const initialState = {\n  moviesNowPlaying: [],\n  moviesPopular: [],\n  moviesTopRated: [],\n  currentMovieList: null,\n  sortField: null,\n  sortOrder: true,\n  isLoadingMovies: false,\n  isLoadingMoreMovies: false,\n  tmdbPageNum: 1,\n  movieDetail: null,\n  isLoadingMovieDetail: false,\n}\n\nexport function reducer (state = initialState, action) {\n  let { sortOrder } = state;\n\n  switch (action.type) {\n    case FETCH_MOVIES_STARTED:\n      return {\n        ...state,\n        isLoadingMovies: true\n      }\n    case FETCH_NOW_PLAYING_SUCCEEDED:\n      return {\n        ...state,\n        moviesNowPlaying: action.movieData,\n        currentMovieList: action.movieData,\n        // currentMovieList: 'now-playing',\n        isLoadingMovies: false\n      }\n    case FETCH_MOVIES_FAILED:\n      console.error(action.err)\n      return {\n        ...state,\n        movies: action.err,\n        currentMovieList: null,\n        isLoadingMovies: false\n      }\n    case FETCH_MOVIE_DETAIL_STARTED: \n      return {\n        ...state,\n        isLoadingMovieDetail: true\n      }\n    case FETCH_MOVIE_DETAIL_SUCCEEDED:\n      return {\n        ...state,\n        isLoadingMovieDetail: false,\n        movieDetail: action.movieDetail\n      }\n    case SORT_BY:\n      sortOrder = true;\n      return {\n        ...state,\n        currentMovieList: sortMovies(state.currentMovieList, action.sortField, sortOrder),\n        sortOrder,\n        sortField: action.sortField\n      }\n    case TOGGLE_SORT_ORDER:\n      sortOrder = !sortOrder;\n      return {\n        ...state,\n        currentMovieList: sortMovies(state.currentMovieList, state.sortField, sortOrder),\n        sortOrder\n      }\n    case SEARCH_MOVIES:\n      let { moviesNowPlaying } = state;\n      let { searchQuery } = action;\n      searchQuery = searchQuery.toLowerCase();\n      const filteredMovies = moviesNowPlaying.filter(movie => {\n        return movie.title.toLowerCase().includes(searchQuery)\n      })\n      return {\n        ...state,\n        currentMovieList: filteredMovies,\n        sortField: null\n      }\n    case SHOW_ALL_MOVIES: \n      return {\n        ...state,\n        currentMovieList: state.moviesNowPlaying,\n        sortField: null\n      }\n    case FETCH_MORE_MOVIES_STARTED:\n      return {\n        ...state,\n        isLoadingMoreMovies: true\n      }\n    case FETCH_MORE_MOVIES_SUCCEEDED:\n      const updatedData = [...state.moviesNowPlaying, ...action.movieData]\n      return {\n        ...state,\n        tmdbPageNum: state.tmdbPageNum + 1,\n        moviesNowPlaying: updatedData,\n        currentMovieList: updatedData,\n        isLoadingMoreMovies: false\n      }\n    // case SELECT_MOVIE:\n    //   return {\n    //     ...state,\n    //     movieDetail: action.selectedMovie\n    //   }\n    case CLOSE_DETAIL_PANE:\n      return {\n        ...state,\n        movieDetail: null\n      }\n    default: \n      return {\n        ...state\n      }\n  }\n}","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { reducer } from '../pages/movies/modules/reducer';\n\nexport default createStore(\n  reducer, \n  composeWithDevTools(applyMiddleware(thunk))\n);","export const FETCH_MOVIES_STARTED = 'FETCH_MOVIES_STARTED';\nexport const FETCH_MOVIES_FAILED = 'FETCH_MOVIES_FAILED';\nexport const FETCH_NOW_PLAYING_SUCCEEDED = 'FETCH_NOW_PLAYING_SUCCEEDED';\nexport const SORT_BY = 'SORT_BY';\nexport const TOGGLE_SORT_ORDER = 'TOGGLE_SORT_ORDER';\nexport const SEARCH_MOVIES = 'SEARCH_MOVIES';\nexport const SHOW_ALL_MOVIES = 'SHOW_ALL_MOVIES';\nexport const FETCH_MORE_MOVIES_SUCCEEDED = 'FETCH_MORE_MOVIES_SUCCEEDED';\nexport const FETCH_MORE_MOVIES_STARTED = 'FETCH_MORE_MOVIES_STARTED';\nexport const CLOSE_DETAIL_PANE = 'CLOSE_DETAIL_PANE';\nexport const FETCH_MOVIE_DETAIL_STARTED = 'FETCH_MOVIE_DETAIL_STARTED';\nexport const FETCH_MOVIE_DETAIL_SUCCEEDED = 'FETCH_MOVIE_DETAIL_SUCCEEDED';","import { \n  FETCH_MOVIES_STARTED, \n  FETCH_MOVIES_FAILED,\n  FETCH_NOW_PLAYING_SUCCEEDED,\n  FETCH_MORE_MOVIES_STARTED,\n  FETCH_MORE_MOVIES_SUCCEEDED,\n  SORT_BY,\n  TOGGLE_SORT_ORDER,\n  SEARCH_MOVIES,\n  SHOW_ALL_MOVIES,\n  CLOSE_DETAIL_PANE,\n  FETCH_MOVIE_DETAIL_STARTED,\n  FETCH_MOVIE_DETAIL_SUCCEEDED\n} from './constants';\n\nfunction fetchMoviesStarted () {\n  return { type: FETCH_MOVIES_STARTED }\n}\n\nfunction fetchMoviesFailed(err) {\n  return { type: FETCH_MOVIES_FAILED, err }\n}\n\nfunction fetchMovies(url) {\n  return fetch (url)\n    .then(res => res.json())\n}\n\nfunction fetchNowPlayingSucceeded(movieData) {\n  return { type: FETCH_NOW_PLAYING_SUCCEEDED, movieData }\n}\n\nfunction fetchMoreMoviesStarted () {\n  return { type: FETCH_MORE_MOVIES_STARTED }\n}\n\nfunction fetchMoreMoviesSucceeded(movieData) {\n  return { type: FETCH_MORE_MOVIES_SUCCEEDED, movieData }\n}\n\nfunction fetchMovieDetailsStarted () {\n  return { type: FETCH_MOVIE_DETAIL_STARTED }\n}\n\nfunction fetchMovieDetailsSucceeded (movieDetail) {\n  return { type: FETCH_MOVIE_DETAIL_SUCCEEDED, movieDetail }\n}\n\nexport function fetchNowPlaying () {\n  return function (dispatch) {\n    dispatch(fetchMoviesStarted());\n\n    return fetchMovies(`https://api.themoviedb.org/3/movie/now_playing?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`)\n      .then(data => dispatch(fetchNowPlayingSucceeded(data.results)))\n      .catch(err => dispatch(fetchMoviesFailed(err)))\n  }\n}\n\nexport function fetchMoreMovies () {\n  return function (dispatch, getState) {\n    dispatch(fetchMoreMoviesStarted())\n\n    const nextPage = getState().tmdbPageNum + 1;\n    return fetchMovies(`https://api.themoviedb.org/3/movie/now_playing?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=${nextPage}`)\n      .then(data => dispatch(fetchMoreMoviesSucceeded(data.results)))\n      .catch(err => dispatch(fetchMoviesFailed(err)))\n  }\n}\n\nexport function fetchMovieDetail (movieId) {\n  return function (dispatch) {\n    dispatch(fetchMovieDetailsStarted());\n\n    fetchMovies(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`)\n      .then(data => dispatch(fetchMovieDetailsSucceeded(data)))\n      .catch(err => dispatch(fetchMoviesFailed(err)))\n  }\n}\n\nexport function sortBy (sortField) {\n  return { type: SORT_BY, sortField }\n}\n\nexport function toggleSortOrder () {\n  return { type: TOGGLE_SORT_ORDER }\n}\n\n// export function selectMovie(selectedMovie) {\n//   return { type: SELECT_MOVIE, selectedMovie }\n// }\n\nexport function closeDetailPane() {\n  return { type: CLOSE_DETAIL_PANE }\n}\n\nexport function searchMovies (searchQuery) {\n  return { type: SEARCH_MOVIES, searchQuery }\n}\n\nexport function showAllMovies () {\n  return { type: SHOW_ALL_MOVIES }\n}","import React from 'react';\nimport './SmallHeader.scss';\n\nexport const SmallHeader = ({text}) => {\n  return (\n    <strong className=\"small-header\">{text}</strong>\n  )\n}","import React from 'react';\nimport { SmallHeader } from '../atoms/SmallHeader';\nimport './HeaderCell.scss';\n\nconst modifySort = (heading) => (\n  heading.toLowerCase().replace(/ /gi, '_')\n)\n\nexport const HeaderCell = ({content, src, sortField, sortOrder, sortBy, toggleSortOrder }) => {\n  const snakeCaseHeading = modifySort(content);\n\n  let sortIcon;\n  if (snakeCaseHeading === sortField) {\n    if (sortOrder) { // true -> in-order sort, false -> reverse-order sort\n      sortIcon = '▲'\n    }\n    else {\n      sortIcon = '▼';\n    }\n  }\n\n  function handleClick () {\n    if (snakeCaseHeading === sortField) {\n      toggleSortOrder();\n    }\n    else {\n      sortBy(snakeCaseHeading)\n    }\n  }\n\n  return (\n    sortBy ? \n        <div className=\"cell-header table-heading\" onClick={handleClick}>\n          <div className=\"table-heading-container\">\n            <SmallHeader text={content} />\n            {\n              sortIcon && <span className=\"sort-icon\">{sortIcon}</span>\n            }\n          </div>\n        </div>\n    :\n      <div className=\"cell-header\" >\n        <SmallHeader text={content} />\n      </div>\n  )\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { HeaderCell } from '../../../components/molecules/HeaderCell';\nimport { sortBy, toggleSortOrder } from '../modules/actions';\n\nfunction mapStateToProps (state) {\n  const { sortField, sortOrder } = state\n  return {\n    sortField,\n    sortOrder\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    sortBy (sortField) {\n      dispatch(sortBy(sortField))\n    },\n    toggleSortOrder () {\n      dispatch(toggleSortOrder())\n    }\n  }\n}\n\n// sort feature...\n\nconst MoviesTableHeaderContainer = ({ sortField, sortOrder, sortBy, toggleSortOrder }) => {\n  const headings = [\n    'Title',\n    'Release Date',\n    'Popularity',\n    'Vote Average'\n  ];\n\n  return (\n    <>\n      {\n        headings.map((heading, ind) => \n          <HeaderCell key={`head-${ind}`} \n            content={heading} \n            sortField={sortField}\n            sortOrder={sortOrder} \n            sortBy={sortBy}\n            toggleSortOrder={toggleSortOrder}\n          />\n        )\n      }\n    </>\n  )\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviesTableHeaderContainer)","import React from 'react';\nimport './DataCell.scss';\n\nexport const DataCell = ({content}) => {\n  return (\n    <div className=\"cell-data\">\n      {content}\n    </div>\n  )\n}","import React from 'react';\nimport './DataCell.scss';\n\nexport const DataCellBarChart = ({content}) => {\n  return (\n    <div className=\"cell-data .container-chart\">\n      <div className=\"chart\" style={{width: `${(content / 10) * 100}%`}}>\n\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport './TableRow.scss';\n\nexport const TableRow = ({ children, onComponentClick }) => (\n    <div className=\"table-row\" onClick={onComponentClick}>\n      {children}\n    </div>\n  )\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { DataCell } from '../../../components/molecules/DataCell';\nimport { DataCellBarChart } from '../../../components/molecules/DataCellBarChart';\nimport { HeaderCell } from '../../../components/molecules/HeaderCell';\nimport { TableRow } from '../../../components/organisms/TableRow';\nimport { fetchMovieDetail } from '../modules/actions';\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    // selectMovie (movie) {\n    //   dispatch(selectMovie(movie))\n    // }\n    fetchMovieDetail (movieId) {\n      dispatch(fetchMovieDetail(movieId))\n    }\n  }\n}\n\nconst MovieTableRowContainer = ({ movie, fetchMovieDetail }) => {\n  const {\n    id,\n    title,\n    release_date,\n    popularity,\n    vote_average,\n  } = movie;\n  const handleClick = () => {fetchMovieDetail(id)}\n  \n  return (\n    <TableRow onComponentClick={handleClick}>\n      <HeaderCell content={title} />\n      <DataCell content={new Date(release_date).toString().split(' ').slice(1, 4).join(' ')} />\n      <DataCell content={popularity} />\n      <DataCellBarChart content={vote_average} />\n    </TableRow>\n  )\n}\n\nexport default connect(null, mapDispatchToProps)(MovieTableRowContainer);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { \n  fetchNowPlaying,\n  fetchMoreMovies\n} from '../modules/actions';\nimport MoviesTableHeader from './MoviesTableHeader';\nimport MovieTableRow from './MovieTableRow';\nimport './MovieTable.scss';\n\nfunction mapStateToProps(state) {\n  const { \n    moviesNowPlaying, \n    moviesPopular,\n    moviesTopRated,\n    currentMovieList,\n    isLoadingMovies,\n    isLoadingMoreMovies\n  } = state;\n\n  return { \n    moviesNowPlaying,\n    moviesPopular,\n    moviesTopRated,\n    currentMovieList,\n    isLoadingMovies,\n    isLoadingMoreMovies\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchNowPlaying () {\n      dispatch(fetchNowPlaying())\n    },\n    fetchMoreMovies () {\n      dispatch(fetchMoreMovies())\n    }\n  }\n}\n\nconst Movies = ({ \n  currentMovieList,\n  isLoadingMovies,\n  isLoadingMoreMovies,\n  fetchNowPlaying,\n  fetchMoreMovies\n}) => {\n  React.useEffect(() => {\n    fetchNowPlaying()\n  // eslint-disable-next-line\n  }, []);\n\n  // each movie obj, need to make a row \n  // once you have an array of rows, add to tbody\n\n  let tbodyMarkup; \n  if (currentMovieList) {\n    tbodyMarkup = currentMovieList.map((movie, ind) => (\n      <MovieTableRow key={`movierow-${ind}`} movie={movie} />\n    ))\n  }\n\n  const handleShowMoreMovies = () => fetchMoreMovies();\n\n  return (\n    <div className=\"container-movie-table\">\n      {\n        isLoadingMovies \n          ? \n          'Loading...' \n          : \n          <>\n            <section className=\"movie-table\">\n              <header className=\"movie-table-header\"><MoviesTableHeader /></header>\n              {tbodyMarkup}\n              {isLoadingMoreMovies && 'Loading...'}\n            </section>\n            <button className=\"button-show-more-movies\" onClick={handleShowMoreMovies}>Show more</button> \n          </>\n      }\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movies);","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  searchMovies,\n  showAllMovies\n} from '../modules/actions'\nimport './SearchBar.scss';\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchMovies (query) {\n      dispatch(searchMovies(query))\n    },\n    showAllMovies () {\n      dispatch(showAllMovies())\n    }\n  }\n}\n\nconst SearchBar = ({ searchMovies, showAllMovies }) => {\n  const [searchQuery, setSearchQuery] = React.useState();\n\n  const handleInput = (e) => setSearchQuery(e.target.value);\n  const handleSearch = () => searchMovies(searchQuery);\n  const handleShowAll = () => {\n    showAllMovies();\n  }\n\n  return (\n    <div className=\"search\">\n      <input \n        className=\"search-input\"\n        onChange={handleInput} \n        placeholder=\"Search Listed Movies\"\n      />\n      <button className=\"search-button\" onClick={handleSearch}>Search</button>\n      <button \n        className=\"search-button\"\n        onClick={handleShowAll}\n      >Show All</button>\n    </div>\n  )\n}\n\nexport default connect(null, mapDispatchToProps)(SearchBar);","import React from 'react';\nimport './DetailPane.scss';\n\nexport const DetailPane = ({ children, isSelected, closePane }) => (\n  <section className={isSelected ? 'detail-pane' : 'detail-pane-closed'} >\n    <button className=\"button-close-pane\" onClick={closePane}>X</button>\n    {children}\n  </section>\n);","import React from 'react';\n\nexport const Overview = ({text}) => (\n  <div>\n    <p>{text}</p>\n  </div>\n)","import React from 'react';\nimport './Icon.scss';\n\nexport const Icon = ({ src, title }) => (\n  <img className=\"poster\" alt={`poster of ${title}`} src={src} />\n)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { DetailPane } from '../../../components/organisms/DetailPane';\nimport { SmallHeader } from '../../../components/atoms/SmallHeader';\nimport { Overview } from '../../../components/atoms/Overview';\nimport { Icon } from '../../../components/atoms/Icon';\nimport { closeDetailPane } from '../modules/actions';\nimport isolang from '../../../assets/isolang.json';\nimport './MovieDetailPane.scss';\n\nfunction mapStateToProps (state) {\n  const { movieDetail, isLoadingMovieDetail } = state\n  return {\n    movieDetail,\n    isLoadingMovieDetail\n  }\n}\n\nfunction mapDispatchToPros (dispatch) {\n  return {\n    closeDetailPane () {\n      dispatch(closeDetailPane())\n    }\n  }\n}\n\nfunction addCommas(arrData, key) {\n  return arrData.map((data, ind) => {\n    if (ind === arrData.length - 1) return data[key]\n    return `${data[key]}, `\n  })\n}\n\nfunction convertToHrsMins (min) {\n  return `${Math.floor(min / 60)} hr, ${min % 60} min`\n}\n\nfunction convertToDollarNotation (num) {\n  let dollars = '';\n  while (num >= 1000) {\n    let hundreds = num % 1000;\n    if (hundreds === 0) hundreds = '000'\n    dollars = `,${hundreds}${dollars}`;\n    num = Math.floor(num / 1000);\n  }\n  dollars =`$${num}${dollars}`;\n  return dollars;\n}\n\nconst MovieDetailPaneContainer = ({ movieDetail, isLoadingMovieDetail, closeDetailPane }) => {\n  if (isLoadingMovieDetail) {\n    return (\n      <DetailPane isSelected={isLoadingMovieDetail} closePane={closeDetailPane} >\n        Loading...\n      </DetailPane>\n    )\n  }\n  if (!!movieDetail) {\n    const { \n      title,\n      homepage,\n      overview,\n      poster_path,\n      tagline,\n      genres,\n      runtime,\n      release_date,\n      status,\n      original_language,\n      budget,\n      revenue,\n      production_companies,\n    } = movieDetail;\n    const language = isolang[original_language].name;\n\n    return (\n      <DetailPane isSelected={!!movieDetail} closePane={closeDetailPane} >\n        <h3 className=\"detail-title\">{title}</h3>\n        <small>{homepage && <a href={homepage}>Official site</a>}</small>\n        <Overview text={overview} />\n        <figure className=\"detail-icon\">\n          <Icon src={`https://image.tmdb.org/t/p/w500/${poster_path}`} title={title} />\n          <figcaption><i>{tagline}</i></figcaption>\n        </figure>\n        <ul className=\"detail-list\">\n          <li>\n            <SmallHeader text=\"Genre:\" />&nbsp;\n            {\n              addCommas(genres, 'name')\n            }\n          </li>\n          {\n            runtime ?\n              <li>\n                <SmallHeader text=\"Runtime:\" />&nbsp;\n                {\n                  convertToHrsMins(runtime)\n                }\n              </li>\n            : \n              null\n          }\n          <li>\n            <SmallHeader text=\"Release date:\" />&nbsp;\n            {\n              new Date(release_date).toString().split(' ').slice(1, 4).join(' ')\n            }\n          </li>\n          <li>\n            <SmallHeader text=\"Status:\" />&nbsp;{status}\n          </li>\n          <li>\n            <SmallHeader text=\"Language:\" />&nbsp;{language}\n          </li>\n          <li>\n            <SmallHeader text=\"Budget:\" />&nbsp;{convertToDollarNotation(budget)}\n          </li>\n          <li>\n            <SmallHeader text=\"Revenue:\" />&nbsp;{convertToDollarNotation(revenue)}\n          </li>\n          <li>\n            <SmallHeader text=\"Production Companies:\" />&nbsp;\n            {\n              addCommas(production_companies, 'name')\n            }\n          </li>\n        </ul>\n      </DetailPane>\n    )\n  }\n  return null;\n}\n\nexport default connect(mapStateToProps, mapDispatchToPros)(MovieDetailPaneContainer)","import React from 'react';\nimport './LargeHeader.scss';\n\nexport const LargeHeader = ({ text }) => (\n  <h1 className=\"large-header\">{text}</h1>\n)","import React from 'react';\nimport { LargeHeader } from '../atoms/LargeHeader'\nimport './MoviePageLayout.scss';\n\nexport const MoviePageLayout = ({ children, style }) => (\n  <>\n    <header>\n      <LargeHeader text=\"Ultimate Moviegoers Guide\" />\n    </header>\n    <main className={style}>\n      {children}\n    </main>\n    <footer>\n      Content from <a href=\"https://www.themoviedb.org/\">TMDB</a>\n    </footer>\n  </>\n)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport MoviesTable from './containers/MoviesTable'\nimport SearchBar from './containers/SearchBar';\nimport MovieDetailPane from './containers/MovieDetailPane';\nimport { MoviePageLayout } from '../../components/templates/MoviePageLayout';\n\nfunction mapStateToProps (state) {\n  const { movieDetail, isLoadingMovieDetail } = state;\n  return {\n    movieDetail,\n    isLoadingMovieDetail\n  }\n}\n\nconst MoviesPageContainer = ({ movieDetail, isLoadingMovieDetail }) => {\n  return (\n    <MoviePageLayout style={movieDetail || isLoadingMovieDetail ? 'expanded-layout' : 'default-layout' } >\n      <MovieDetailPane />\n      <SearchBar />\n      <MoviesTable />\n    </MoviePageLayout>\n  )\n};\n\nexport default connect(mapStateToProps)(MoviesPageContainer)","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './globals/index';\nimport MoviesPage from './pages/movies/MoviesPage';\nimport './App.scss';\n\nexport default function App () { \n  return (\n    <Provider store={store}>\n      <MoviesPage />\n    </Provider>\n  )\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n);"],"sourceRoot":""}